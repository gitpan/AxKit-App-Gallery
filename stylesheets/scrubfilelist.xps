<%

# Copyright (c) 2003 Nik Clayton
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# $Id: scrubfilelist.xps,v 1.1.1.1 2003/03/29 17:11:49 nik Exp $
 
$t->{'directory'}{testcode} = sub {
	my $node = shift;
	my $t = shift;

	my $text = findvalue('./text()', $node);

	# Ignore directories with leading dots (unless it's the current
	# directory)
	return 0 if $text =~ /^\..+/;

	$t->{showtag} = 1;
	return 1;
};

$t->{'file'}{testcode} = sub {
	my $node = shift;
	my $t = shift;

	my $file = findvalue('./text()', $node);

	# Ignore dot files
	return 0 if $file =~ /^\./;

	my $type = $r->lookup_file($file)->content_type();

	# Ignore files that are not 'image/*'
	return 0 unless
		defined $type
		&& substr($type, 0, 6) eq 'image/';

	# Ignore files that are not readable (i.e., the 'readable'
	# attribute in the element is not '1')
	return 0 unless findvalue('@readable', $node);

	$t->{showtag} = 1;
	return 1;
};

%>

<%= apply_templates() %>
